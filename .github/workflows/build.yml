name: Go Build for Linux

on:
  push:
    branches:
      - main

permissions:
  contents: write


jobs: 
  build: 
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Get latest commit message
        id: get_commit_message
        run: |
          echo "commit_message=$(git log -1 --pretty=%B)" >> $GITHUB_ENV
      
        

      - name: Install golang
        uses: actions/setup-go@v2
        with: 
          go-version: 1.23
    
      - name: LS
        run: ls -R ./updater
      - name: Build files
        if: ${{ contains(env.commit_message, '--build') }}
        run: |
          #!/bin/bash

          WORKDIR=${{github.workspace}}
          BUILD_JSON="$WORKDIR/data/builds.json"

          # Find the full path of the 'go' binary
          GO_PATH=$(which go)

          if [ -z "$GO_PATH" ]; then
            echo "Error: 'go' is not installed or not in PATH."
            exit 1
          fi

          jq -c '.toBuild[]' $BUILD_JSON | while IFS= read -r item; do
            CMD=$(echo "$item" | jq -r '.cmd' | sed "s|{{go}}|$GO_PATH|g")
            PATH=$(echo "$item" | jq -r '.path' | sed "s|{{workdir}}|$WORKDIR|g")

            echo "Executing: cd $PATH && $CMD"

            # Execute the build command
            cd "$PATH" || { echo "Error: Directory $PATH does not exist."; exit 1; }
            eval "$CMD"
          done





      - name: Commit changes
        if: ${{ contains(env.commit_message, '--build') }}
        run: |
          git config --global user.name "LogiqueBot"
          git config --global user.email "qq623589@gmail.com"
          
          git add -A
      
          if ! git diff --cached --quiet; then
                git commit -a -m "Built files for commit: $commit_hash"
                git push
            fi