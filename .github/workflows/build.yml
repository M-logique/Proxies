name: Build files

on:
  push:
    branches:
      - main

permissions:
  contents: write


jobs: 
  build: 
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Get latest commit message and hash
        id: get_commit_info
        run: |
          echo "commit_message=$(git log -1 --pretty=%B)" >> $GITHUB_ENV
          echo "commit_hash=$(git log -1 --pretty=%H)" >> $GITHUB_ENV
      
        

      - name: Install golang
        if: ${{ contains(env.commit_message, '--build') }}
        uses: actions/setup-go@v2
        with: 
          go-version: 1.23

      - name: Install depencies
        if: ${{ contains(env.commit_message, '--build') }}
        run: | 
          sudo apt install cmake
          sudo apt install pybind11-dev

    
      - name: Build files
        if: ${{ contains(env.commit_message, '--build') }}
        run: |
          #!/bin/bash

          WORKDIR=${{github.workspace}}
          BUILD_JSON="$WORKDIR/data/builds.json"

          # Find the full path of the 'go' binary
          GO_PATH=$(which go)

          if [ -z "$GO_PATH" ]; then
            echo "Error: 'go' is not installed or not in PATH."
            exit 1
          fi

          # Parse JSON and execute commands
          jq -c '.toBuild[]' "$BUILD_JSON" | while IFS= read -r item; do
            # Extract name and command
            NAME=$(echo "$item" | jq -r '.name')
            CMD=$(echo "$item" | jq -r '.cmd' | sed "s|{{go}}|$GO_PATH|g" | sed "s|{{workdir}}|$WORKDIR|g")

            # Print the task being executed
            echo "building $NAME"

            # Execute the build command
            eval "$CMD" || { echo "Error: Failed to build $NAME."; exit 1; }
          done





      - name: Commit changes
        if: ${{ contains(env.commit_message, '--build') }}
        run: |
          git config --global user.name "LogiqueBot"
          git config --global user.email "qq623589@gmail.com"
          
          git add -A
      
          if ! git diff --cached --quiet; then
                git commit -a -m "Built files for commit: ${{ env.commit_hash }}"
                git push
            fi